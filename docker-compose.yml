version: '3.8'

services:
  postgres:
    image: postgres:15.4
    container_name: postgres
    environment:
      POSTGRES_DB: bookdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend-network

  backend:
    build:
      context: ./book-api
      dockerfile: Dockerfile
    container_name: book-api
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bookdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      - postgres
    networks:
      - backend-network
      - frontend-backend-network

  frontend:
    build:
      context: ./book-ui
      dockerfile: Dockerfile
    container_name: book-ui
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - frontend-backend-network

  nginx:
    image: nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - frontend
    networks:
      - backend-network
      - frontend-backend-network

networks:
  backend-network:
  frontend-backend-network:

volumes:
  postgres-data:
